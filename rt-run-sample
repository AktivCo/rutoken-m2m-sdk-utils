#!/bin/sh

. /opt/Rutoken/scripts/include/rt-api

usage(){
	echo "Usage: sudo rt-run-sample [ options ] -p <path> "
	echo "Options:"
	echo "          -h                               see help message"
	echo "          -s                               enable pcsc-spy logging of the sample"	
	echo "          -l                               write sample output to log file"
	echo -e "                                        \e[1mall logs are created in /home/user/log directory\e[0m"
	echo "          -d  <device>                     select device to run sample on"
	echo "          Devices:"
	echo "                      2010                 run sample on Rutoken 2010 SoC only"
	echo "                      4010                 run sample on Rutoken 4010 SoM only"
	echo "                      all                  run sample on both devices; this is default settings if -d option not provided"
	echo " "
	echo "          -p  <path>                       path to sample to run"
}

check_sample(){

	if [ ! -f $1 ]; then
		print_error "no such sample: $1"
		exit 1
	fi
}

check_device(){

	if ! echo $1| grep -Eq '^(4010|2010|all)'; then
		print_error "Device $1 doesn't exist"
		exit 1
	fi
}

select_device(){

	stop_pcscd
	case $1 in
		2010) enable_devices "on"  "off" "off";;
		4010) enable_devices "off" "on"  "off" ;;
		all)  enable_devices "on"  "on"  "off";;
	esac
	start_pcscd
}

run_sample(){

	spy=$1
	log=$2
	device=$3
	sample=$(realpath $4 / | head -n 1)
	sample_name=$( echo "$sample" | awk -F "/" '{print $NF}')

	user=$(echo $SUDO_USER)
	if [ -z $user ]; then
		user=$(who am i | awk '{print $1}')
	fi

	home=$(sudo -u $user sh -c "cd ~$user && pwd")

	pcsc_spy_fifo="$home/pcsc-spy"


	if [ -p $pcsc_spy_fifo ]; then
		rm $pcsc_spy_fifo
	fi

	select_device $device

	if $spy || $log; then
		log_dir="$home/log/$sample_name"
		sudo -u $user -H sh -c "mkdir -p $log_dir"
	fi

	preload=""
	if $spy; then
		preload="LD_PRELOAD=/usr/lib/libpcscspy.so"
		sudo -u $user -H sh -c "mkfifo $pcsc_spy_fifo"
		pcsc_spy_raw_out="$log_dir/.pcsc-spy.raw"
		sudo -u $user -H sh -c "cat $pcsc_spy_fifo > $pcsc_spy_raw_out &"
		cat_pid=$!
		pcsc_spy_out="$log_dir/$sample_name-pcsc-spy.log"
	fi

	if $log; then
		print_info "$sample_name work in progress, please wait"
		sample_out="$log_dir/$sample_name.log"
		sudo -u $user -H sh -c "$preload $sample > $sample_out"
		print_succeed "$sample_name done!"
	else
		sudo -u $user -H sh -c "$preload $sample"
		print_succeed "$sample_name done!"
	fi

	if $spy; then
		print_info "pcsc-spy work in progress, please wait"
		sudo -u $user -H sh -c "/usr/bin/pcsc-spy -n $pcsc_spy_raw_out > $pcsc_spy_out"
		print_succeed "pcsc-spy done!"
		if ps -C -p $cat_pid 1>/dev/null; then
			kill $cat_pid
		fi

		rm $pcsc_spy_fifo $pcsc_spy_raw_out

	fi

	enable_devices "on"  "on"  "off"
}

main(){

	if [ $# -lt 1 ]; then
		usage
		exit 1
	fi

	spy_option=false
	log_option=false
	device='all'
	path=''

	while getopts "hsld:p:" opt; do
		case $opt in
			h)	usage
				exit 0
			;;
			s)	spy_option=true
			;;
			l)	log_option=true
			;;
			d)	device=$OPTARG
				check_device "$device"
			;;
			p)	path=$OPTARG
				check_sample "$path"
			;;
			*)	usage
				exit 1
			;;
		esac
	done

	exit_if_not_root

	if ! is_pcscd_running; then
		print_info "pcscd isn't running; starting pcscd"
		start_pcscd
	fi

	if [ ! -z $path ]; then
		run_sample $spy_option $log_option $device $path
	else
		print_error "no path supplied"
		usage
		exit 1
	fi
}

main $*
